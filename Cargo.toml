[workspace]
members = [
	"core/",
    "cli/",
    "core-wasm",
]
resolver = "2"

[workspace.package]
edition = "2021"
authors = ["Ideal Labs <hello@idealabs.network>"]
repository = "https://github.com/ideal-lab5/murmur"
homepage = "https://idealabs.network"

[workspace.lints.rust]
suspicious_double_ref_op = { level = "allow", priority = 2 }

[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
correctness = { level = "warn", priority = 1 }
complexity = { level = "warn", priority = 1 }
if-same-then-else = { level = "allow", priority = 2 }
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
useless_conversion = { level = "allow", priority = 2 }               # Types may change
unit_arg = { level = "allow", priority = 2 }                         # stylistic
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
derivable_impls = { level = "allow", priority = 2 }                  # false positives
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic

# [workspace.dependencies]
# polkavm = "0.9.3"
# polkavm-linker = "0.9.2"
# polkavm-derive = "0.9.1"
# log = { version = "0.4.21", default-features = false }
# quote = { version = "1.0.33" }
# serde = { version = "1.0.197", default-features = false }
# serde-big-array = { version = "0.3.2" }
# serde_derive = { version = "1.0.117" }
# serde_json = { version = "1.0.114", default-features = false }
# serde_yaml = { version = "0.9" }
# syn = { versicargon = "2.0.53" }
# thiserror = { version = "1.0.48" }

[profile.release]
opt-level = 3
lto = "thin"
incremental = true
panic = 'unwind'

[profile.bench]
opt-level = 3
debug = false
rpath = false
lto = "thin"
incremental = true
debug-assertions = false

[profile.dev]
opt-level = 0
panic = 'unwind'

[profile.test]
opt-level = 3
lto = "thin"
incremental = true
debug-assertions = true
debug = true

[workspace.metadata.release]
dependent-version = "fix"

# [package]
# name = "murmur-rs"
# version = "0.1.0"
# edition = "2021"

# # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# [dependencies]
# subxt = "0.35.2"
# subxt-signer = "0.35.2"
# tokio = { version = "1.35", features = ["macros", "time", "rt-multi-thread"] }
# totp-rs = "5.5.1"
# etf-crypto-primitives = { git = "https://github.com/ideal-lab5/etf-sdk/", branch = "tony/dev" } 
# # etf-crypto-primitives = { path = "../etf-sdk/etf-crypto-primitives" }
# clap = { version = "4.1.1", features = ["derive"] }
# rand_chacha = "0.3.1"
# ckb-merkle-mountain-range = "0.5.2"
# # blake2b = "0.10.6"
# sha3 = "0.10.8"
# serde_cbor = "0.11.2"
# # bytes = "1.4.0"
# serde_json = "1.0.108"
# indicatif = "0.17.8"
# sp-keyring = {  git = "https://github.com/ideal-lab5/polkadot-sdk.git", branch = "testing" }
# frame-support = {  git = "https://github.com/ideal-lab5/polkadot-sdk.git", branch = "testing" }
# # node-runtime = { path = "../etf/runtime" }
# codec = { package = "parity-scale-codec", version = "3.6.12", features = [
# 	"derive",
# ] }
# serde = { version = "1.0.188", features = ["alloc", "derive"] }
# sp-core = { git = "https://github.com/ideal-lab5/polkadot-sdk.git", branch = "testing", features = ["bls-experimental"] }
# sp-runtime = { git = "https://github.com/ideal-lab5/polkadot-sdk.git", branch = "testing" }
# beefy = { package = "sp-consensus-beefy-etf", git = "https://github.com/ideal-lab5/etf.git", branch = "tony/dev", features = ["bls-experimental"] } 
# sp-application-crypto = { git = "https://github.com/ideal-lab5/polkadot-sdk.git", branch = "testing", features = ["bls-experimental"] }

# ark-bls12-377 = "0.4.0"
# ark-std = "0.4.0"
# ark-ec = "0.4.0"
# ark-ff = "0.4.0"
# ark-serialize = "0.4.0"
# w3f-bls = "0.1.3"
# getrandom = { version = "0.2", features = ["js"] }
# rand_core = { version = "0.6.4", features = ["getrandom"] }
# hex = "0.4.3"
# array-bytes = "6.1"